#!/usr/bin/env scriptisto

// scriptisto-begin
// script_src: src/main.rs
// build_cmd: cargo build --release && strip ./target/release/script
// target_bin: ./target/release/script
// files:
//  - path: Cargo.toml
//    content: |
//     package = { name = "script", version = "0.1.0", edition = "2018"}
//     [dependencies]
//     scripttools = { path = "/home/jokler/rust/scripttools" }
//     structopt="*"
//     cmd_lib = "0.7"
//     regex = "*"
// scriptisto-end

use structopt::StructOpt;
use cmd_lib::*;
use scripttools::*;

#[derive(Debug, StructOpt)]
#[structopt(name = "open-url", about = "Opens urls in their respective programs")]
struct Opt {
    /// The url to open
    url: String,
}

fn main() {
    let opt = Opt::from_args();
    if let Err(e) = run(opt) {
        eprintln!("{}", e);
    }
}

fn run(opt: Opt) -> Result<()> {
    let url = opt.url;

    let youtube_re = regex::Regex::new(r"^https?://(www\.)?(youtube\.com/watch|youtu\.be/|yewtu\.be/watch)").unwrap();
    //let twitch_clips_re = regex::Regex::new(r"^https?://clips\.twitch\.tv/").unwrap();
    let twitter_re = regex::Regex::new(r"^https?://(www\.)?twitter\.com/(.*)").unwrap();
    let instagram_re = regex::Regex::new(r"^https?://(www\.)?instagram\.com/(p/)?(.*)").unwrap();
    let reddit_gallery_re = regex::Regex::new(r"https://www.reddit.com/gallery/(.*)").unwrap();

    if youtube_re.is_match(&url) {
        Ok(run_cmd!("umpv \"{}\"", url)?)
    } else if let Some(caps) = twitter_re.captures(&url) {
        Ok(run_cmd!("firefox \"https://nitter.moomoo.me/{}\"", &caps[2])?)
    } else if let Some(caps) = reddit_gallery_re.captures(&url) {
        Ok(run_cmd!("firefox \"https://new.reddit.com/gallery/{}\"", &caps[1])?)
    //} else if let Some(caps) = instagram_re.captures(&url) {
        //dbg!(&caps);
        //match caps.get(2) {
            //Some(_) => Ok(run_cmd!("firefox \"https://bibliogram.art/p/{}\"", &caps[3])?),
            //None => Ok(run_cmd!("firefox \"https://bibliogram.art/u/{}\"", &caps[3])?),
        //}
    } else {
        Ok(run_cmd!("firefox \"{}\"", url)?)
    }
}

// vim: filetype=rust
